// Generated by view binder compiler. Do not edit!
package com.example.fitfeast.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fitfeast.R;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentWeightManagementBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialCardView cardViewWeightMetrics;

  @NonNull
  public final FloatingActionButton fabAddWeight;

  @NonNull
  public final TextView historyHeader;

  @NonNull
  public final RecyclerView recyclerViewWeightHistory;

  @NonNull
  public final TextView textViewAvgWeightLabel;

  @NonNull
  public final TextView textViewAvgWeightValue;

  @NonNull
  public final TextView textViewMaxWeightLabel;

  @NonNull
  public final TextView textViewMaxWeightValue;

  @NonNull
  public final TextView textViewMinWeightLabel;

  @NonNull
  public final TextView textViewMinWeightValue;

  private FragmentWeightManagementBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialCardView cardViewWeightMetrics, @NonNull FloatingActionButton fabAddWeight,
      @NonNull TextView historyHeader, @NonNull RecyclerView recyclerViewWeightHistory,
      @NonNull TextView textViewAvgWeightLabel, @NonNull TextView textViewAvgWeightValue,
      @NonNull TextView textViewMaxWeightLabel, @NonNull TextView textViewMaxWeightValue,
      @NonNull TextView textViewMinWeightLabel, @NonNull TextView textViewMinWeightValue) {
    this.rootView = rootView;
    this.cardViewWeightMetrics = cardViewWeightMetrics;
    this.fabAddWeight = fabAddWeight;
    this.historyHeader = historyHeader;
    this.recyclerViewWeightHistory = recyclerViewWeightHistory;
    this.textViewAvgWeightLabel = textViewAvgWeightLabel;
    this.textViewAvgWeightValue = textViewAvgWeightValue;
    this.textViewMaxWeightLabel = textViewMaxWeightLabel;
    this.textViewMaxWeightValue = textViewMaxWeightValue;
    this.textViewMinWeightLabel = textViewMinWeightLabel;
    this.textViewMinWeightValue = textViewMinWeightValue;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentWeightManagementBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentWeightManagementBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_weight_management, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentWeightManagementBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardViewWeightMetrics;
      MaterialCardView cardViewWeightMetrics = ViewBindings.findChildViewById(rootView, id);
      if (cardViewWeightMetrics == null) {
        break missingId;
      }

      id = R.id.fabAddWeight;
      FloatingActionButton fabAddWeight = ViewBindings.findChildViewById(rootView, id);
      if (fabAddWeight == null) {
        break missingId;
      }

      id = R.id.historyHeader;
      TextView historyHeader = ViewBindings.findChildViewById(rootView, id);
      if (historyHeader == null) {
        break missingId;
      }

      id = R.id.recyclerViewWeightHistory;
      RecyclerView recyclerViewWeightHistory = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewWeightHistory == null) {
        break missingId;
      }

      id = R.id.textViewAvgWeightLabel;
      TextView textViewAvgWeightLabel = ViewBindings.findChildViewById(rootView, id);
      if (textViewAvgWeightLabel == null) {
        break missingId;
      }

      id = R.id.textViewAvgWeightValue;
      TextView textViewAvgWeightValue = ViewBindings.findChildViewById(rootView, id);
      if (textViewAvgWeightValue == null) {
        break missingId;
      }

      id = R.id.textViewMaxWeightLabel;
      TextView textViewMaxWeightLabel = ViewBindings.findChildViewById(rootView, id);
      if (textViewMaxWeightLabel == null) {
        break missingId;
      }

      id = R.id.textViewMaxWeightValue;
      TextView textViewMaxWeightValue = ViewBindings.findChildViewById(rootView, id);
      if (textViewMaxWeightValue == null) {
        break missingId;
      }

      id = R.id.textViewMinWeightLabel;
      TextView textViewMinWeightLabel = ViewBindings.findChildViewById(rootView, id);
      if (textViewMinWeightLabel == null) {
        break missingId;
      }

      id = R.id.textViewMinWeightValue;
      TextView textViewMinWeightValue = ViewBindings.findChildViewById(rootView, id);
      if (textViewMinWeightValue == null) {
        break missingId;
      }

      return new FragmentWeightManagementBinding((CoordinatorLayout) rootView,
          cardViewWeightMetrics, fabAddWeight, historyHeader, recyclerViewWeightHistory,
          textViewAvgWeightLabel, textViewAvgWeightValue, textViewMaxWeightLabel,
          textViewMaxWeightValue, textViewMinWeightLabel, textViewMinWeightValue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
