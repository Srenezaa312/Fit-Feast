// Generated by view binder compiler. Do not edit!
package com.example.fitfeast.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fitfeast.R;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAddWeightBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialCardView cardViewInput;

  @NonNull
  public final MaterialCardView cardViewMetrics;

  @NonNull
  public final LinearLayout dateTimeContainer;

  @NonNull
  public final TextInputEditText editTextNewWeight;

  @NonNull
  public final FloatingActionButton fabBackToWeightManagement;

  @NonNull
  public final FloatingActionButton fabSaveWeight;

  @NonNull
  public final ImageView imageViewCalendar;

  @NonNull
  public final ImageView imageViewTime;

  @NonNull
  public final TextInputLayout textInputLayoutNewWeight;

  @NonNull
  public final TextView textViewBMILabel;

  @NonNull
  public final TextView textViewBMIValue;

  @NonNull
  public final TextView textViewBodyFatLabel;

  @NonNull
  public final TextView textViewBodyFatValue;

  @NonNull
  public final TextView textViewChangePercentageLabel;

  @NonNull
  public final TextView textViewChangePercentageValue;

  @NonNull
  public final TextView textViewDate;

  @NonNull
  public final TextView textViewPreviousWeight;

  @NonNull
  public final TextView textViewTime;

  @NonNull
  public final TextView textViewWeightUnit;

  private FragmentAddWeightBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialCardView cardViewInput, @NonNull MaterialCardView cardViewMetrics,
      @NonNull LinearLayout dateTimeContainer, @NonNull TextInputEditText editTextNewWeight,
      @NonNull FloatingActionButton fabBackToWeightManagement,
      @NonNull FloatingActionButton fabSaveWeight, @NonNull ImageView imageViewCalendar,
      @NonNull ImageView imageViewTime, @NonNull TextInputLayout textInputLayoutNewWeight,
      @NonNull TextView textViewBMILabel, @NonNull TextView textViewBMIValue,
      @NonNull TextView textViewBodyFatLabel, @NonNull TextView textViewBodyFatValue,
      @NonNull TextView textViewChangePercentageLabel,
      @NonNull TextView textViewChangePercentageValue, @NonNull TextView textViewDate,
      @NonNull TextView textViewPreviousWeight, @NonNull TextView textViewTime,
      @NonNull TextView textViewWeightUnit) {
    this.rootView = rootView;
    this.cardViewInput = cardViewInput;
    this.cardViewMetrics = cardViewMetrics;
    this.dateTimeContainer = dateTimeContainer;
    this.editTextNewWeight = editTextNewWeight;
    this.fabBackToWeightManagement = fabBackToWeightManagement;
    this.fabSaveWeight = fabSaveWeight;
    this.imageViewCalendar = imageViewCalendar;
    this.imageViewTime = imageViewTime;
    this.textInputLayoutNewWeight = textInputLayoutNewWeight;
    this.textViewBMILabel = textViewBMILabel;
    this.textViewBMIValue = textViewBMIValue;
    this.textViewBodyFatLabel = textViewBodyFatLabel;
    this.textViewBodyFatValue = textViewBodyFatValue;
    this.textViewChangePercentageLabel = textViewChangePercentageLabel;
    this.textViewChangePercentageValue = textViewChangePercentageValue;
    this.textViewDate = textViewDate;
    this.textViewPreviousWeight = textViewPreviousWeight;
    this.textViewTime = textViewTime;
    this.textViewWeightUnit = textViewWeightUnit;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAddWeightBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAddWeightBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_add_weight, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAddWeightBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardViewInput;
      MaterialCardView cardViewInput = ViewBindings.findChildViewById(rootView, id);
      if (cardViewInput == null) {
        break missingId;
      }

      id = R.id.cardViewMetrics;
      MaterialCardView cardViewMetrics = ViewBindings.findChildViewById(rootView, id);
      if (cardViewMetrics == null) {
        break missingId;
      }

      id = R.id.dateTimeContainer;
      LinearLayout dateTimeContainer = ViewBindings.findChildViewById(rootView, id);
      if (dateTimeContainer == null) {
        break missingId;
      }

      id = R.id.editTextNewWeight;
      TextInputEditText editTextNewWeight = ViewBindings.findChildViewById(rootView, id);
      if (editTextNewWeight == null) {
        break missingId;
      }

      id = R.id.fabBackToWeightManagement;
      FloatingActionButton fabBackToWeightManagement = ViewBindings.findChildViewById(rootView, id);
      if (fabBackToWeightManagement == null) {
        break missingId;
      }

      id = R.id.fabSaveWeight;
      FloatingActionButton fabSaveWeight = ViewBindings.findChildViewById(rootView, id);
      if (fabSaveWeight == null) {
        break missingId;
      }

      id = R.id.imageViewCalendar;
      ImageView imageViewCalendar = ViewBindings.findChildViewById(rootView, id);
      if (imageViewCalendar == null) {
        break missingId;
      }

      id = R.id.imageViewTime;
      ImageView imageViewTime = ViewBindings.findChildViewById(rootView, id);
      if (imageViewTime == null) {
        break missingId;
      }

      id = R.id.textInputLayoutNewWeight;
      TextInputLayout textInputLayoutNewWeight = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutNewWeight == null) {
        break missingId;
      }

      id = R.id.textViewBMILabel;
      TextView textViewBMILabel = ViewBindings.findChildViewById(rootView, id);
      if (textViewBMILabel == null) {
        break missingId;
      }

      id = R.id.textViewBMIValue;
      TextView textViewBMIValue = ViewBindings.findChildViewById(rootView, id);
      if (textViewBMIValue == null) {
        break missingId;
      }

      id = R.id.textViewBodyFatLabel;
      TextView textViewBodyFatLabel = ViewBindings.findChildViewById(rootView, id);
      if (textViewBodyFatLabel == null) {
        break missingId;
      }

      id = R.id.textViewBodyFatValue;
      TextView textViewBodyFatValue = ViewBindings.findChildViewById(rootView, id);
      if (textViewBodyFatValue == null) {
        break missingId;
      }

      id = R.id.textViewChangePercentageLabel;
      TextView textViewChangePercentageLabel = ViewBindings.findChildViewById(rootView, id);
      if (textViewChangePercentageLabel == null) {
        break missingId;
      }

      id = R.id.textViewChangePercentageValue;
      TextView textViewChangePercentageValue = ViewBindings.findChildViewById(rootView, id);
      if (textViewChangePercentageValue == null) {
        break missingId;
      }

      id = R.id.textViewDate;
      TextView textViewDate = ViewBindings.findChildViewById(rootView, id);
      if (textViewDate == null) {
        break missingId;
      }

      id = R.id.textViewPreviousWeight;
      TextView textViewPreviousWeight = ViewBindings.findChildViewById(rootView, id);
      if (textViewPreviousWeight == null) {
        break missingId;
      }

      id = R.id.textViewTime;
      TextView textViewTime = ViewBindings.findChildViewById(rootView, id);
      if (textViewTime == null) {
        break missingId;
      }

      id = R.id.textViewWeightUnit;
      TextView textViewWeightUnit = ViewBindings.findChildViewById(rootView, id);
      if (textViewWeightUnit == null) {
        break missingId;
      }

      return new FragmentAddWeightBinding((ConstraintLayout) rootView, cardViewInput,
          cardViewMetrics, dateTimeContainer, editTextNewWeight, fabBackToWeightManagement,
          fabSaveWeight, imageViewCalendar, imageViewTime, textInputLayoutNewWeight,
          textViewBMILabel, textViewBMIValue, textViewBodyFatLabel, textViewBodyFatValue,
          textViewChangePercentageLabel, textViewChangePercentageValue, textViewDate,
          textViewPreviousWeight, textViewTime, textViewWeightUnit);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
