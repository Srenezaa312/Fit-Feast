// Generated by view binder compiler. Do not edit!
package com.example.fitfeast.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fitfeast.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemWeightHistoryBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView textViewBMI;

  @NonNull
  public final TextView textViewBMIHeader;

  @NonNull
  public final TextView textViewBodyFatPercentage;

  @NonNull
  public final TextView textViewBodyFatPercentageHeader;

  @NonNull
  public final TextView textViewDate;

  @NonNull
  public final TextView textViewTime;

  @NonNull
  public final TextView textViewWeight;

  private ItemWeightHistoryBinding(@NonNull CardView rootView, @NonNull TextView textViewBMI,
      @NonNull TextView textViewBMIHeader, @NonNull TextView textViewBodyFatPercentage,
      @NonNull TextView textViewBodyFatPercentageHeader, @NonNull TextView textViewDate,
      @NonNull TextView textViewTime, @NonNull TextView textViewWeight) {
    this.rootView = rootView;
    this.textViewBMI = textViewBMI;
    this.textViewBMIHeader = textViewBMIHeader;
    this.textViewBodyFatPercentage = textViewBodyFatPercentage;
    this.textViewBodyFatPercentageHeader = textViewBodyFatPercentageHeader;
    this.textViewDate = textViewDate;
    this.textViewTime = textViewTime;
    this.textViewWeight = textViewWeight;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemWeightHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemWeightHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_weight_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemWeightHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.textViewBMI;
      TextView textViewBMI = ViewBindings.findChildViewById(rootView, id);
      if (textViewBMI == null) {
        break missingId;
      }

      id = R.id.textViewBMIHeader;
      TextView textViewBMIHeader = ViewBindings.findChildViewById(rootView, id);
      if (textViewBMIHeader == null) {
        break missingId;
      }

      id = R.id.textViewBodyFatPercentage;
      TextView textViewBodyFatPercentage = ViewBindings.findChildViewById(rootView, id);
      if (textViewBodyFatPercentage == null) {
        break missingId;
      }

      id = R.id.textViewBodyFatPercentageHeader;
      TextView textViewBodyFatPercentageHeader = ViewBindings.findChildViewById(rootView, id);
      if (textViewBodyFatPercentageHeader == null) {
        break missingId;
      }

      id = R.id.textViewDate;
      TextView textViewDate = ViewBindings.findChildViewById(rootView, id);
      if (textViewDate == null) {
        break missingId;
      }

      id = R.id.textViewTime;
      TextView textViewTime = ViewBindings.findChildViewById(rootView, id);
      if (textViewTime == null) {
        break missingId;
      }

      id = R.id.textViewWeight;
      TextView textViewWeight = ViewBindings.findChildViewById(rootView, id);
      if (textViewWeight == null) {
        break missingId;
      }

      return new ItemWeightHistoryBinding((CardView) rootView, textViewBMI, textViewBMIHeader,
          textViewBodyFatPercentage, textViewBodyFatPercentageHeader, textViewDate, textViewTime,
          textViewWeight);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
